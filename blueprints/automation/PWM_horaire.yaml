blueprint:
  name: PWM_horaire
  description: cadencement chauffage en mode PWM différent en fonction des heures creuses
  domain: automation
  input:   
    cons_puiss:
      name: Puissance
      description: pourcentage de puissance (input_number)
      selector:
        entity:
          domain: input_number
    sor_chauff:
      name: Chauffage
      description: Commande du chauffage (switch)
      selector:
        entity:
          domain: switch
          
  source_url: https://github.com/Jacquiers687/code_home_Assistant/blob/main/blueprints/automation/PWM_horaire.yaml
mode: restart

variables:
  annee : 2022
 
trigger:
 # >HC de la nuit
  - platform: time
    at: '02:00:00'
  - platform: time
    at: '03:30:00'
  - platform: time
    at: '05:00:00'
  - platform: time
    at: '06:30:00'
 #<HP du matin
  - platform: time
    at: '08:30:00'
  - platform: time
    at: '10:30:00'
 # >HC du midi 
  - platform: time
    at: '12:30:00'
  - platform: time
    at: '14:00:00'
 #<HP apres midi
  - platform: time
    at: '16:00:00'
  - platform: time
    at: '18:00:00'
  - platform: time
    at: '20:00:00'
  - platform: time
    at: '22:00:00'
  - platform: time
    at: '00:01:00'

    
# heures creuses de 1h30 à 07h30 ; et 12h30 à 14h30
# l'idée de base serait de déclencher un top proportionnel toutes les heures (24 top)
# Pour accumuler davantage pendant les heures creuses,
#   on va lancer propotionellement plus de top pendant les heures creuses que pendant les heures pleine.
# ( 6 top pendant les heures creuses; et 7 top pendant les heures pleines 
action:
  - alias: Impulsion de longueur calculée
    variables:
      cons_puiss: !input 'cons_puiss'
      consigne: '{{states(cons_puiss)}}'
      secondes : '{{ (((consigne * 3600)/100) | round(0)) }}'
      temps_chauffe:  '{{secondes}}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{(temps_chauffe >= 180) and (temps_chauffe <= 2000) }}'
      sequence:
      - service: switch.turn_on
        target:
            entity_id: !input 'sor_chauff'   
      - delay: '{{temps_chauffe}}' 
      - service: switch.turn_off
        target:
            entity_id: !input 'sor_chauff'     
    default:
    - service: switch.turn_off
      target:
         entity_id: !input 'sor_chauff'   
            
            
            
            
            
            
